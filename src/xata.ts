// Generated by Xata Codegen 0.21.0. Please do not edit.
import type { BaseClientOptions, SchemaInference, XataRecord } from "@xata.io/client";
import { buildClient } from "@xata.io/client";

const tables = [{ name: "Players", columns: [{ name: "Name", type: "string" }] }] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Players = InferredTypes["Players"];
export type PlayersRecord = Players & XataRecord;

export type DatabaseSchema = {
	Players: PlayersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
	enableBrowser: true, // TODO: Should I delete this?
	apiKey: process.env.XATA_API_KEY,
	databaseURL: "https://Luke-Bangs-s-workspace-asjtkd.eu-west-1.xata.sh/db/big-lynn-2023",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super({ ...defaultOptions, ...options }, tables);
	}
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
	if (instance) return instance;

	instance = new XataClient();
	return instance;
};
